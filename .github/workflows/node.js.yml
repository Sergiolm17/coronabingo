# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on: [pull_request]

jobs:

  greeting:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Run Memer Action
        id: memer

        uses: Bhupesh-V/memer-action@master
        with:
          filter: "top"

      - name: Check Outputs
        run: |
          echo "${{ steps.memer.outputs.meme }}"
          echo "${{ steps.memer.outputs.title }}"
          echo "${{ steps.memer.outputs.source }}"

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v1.3.0
        id: couc
        with:
          issue-number: ${{ github.event.number }}
          body: |
            üéâ Thanks for opening this PR
            Please wait while the maintainer(s) reviews it

            Meanwhile have a look at this:

            > **${{ steps.memer.outputs.title }}**
            ![meme](${{ steps.memer.outputs.meme }})
            <sub>‚ÑπÔ∏è <a href="${{ steps.memer.outputs.source }}">Source</a> [Powered By <a href="https://github.com/Bhupesh-V/memer-action">Memer Action</a>]</sub>

  build:

    runs-on: ubuntu-latest

    env:
      API_KEY: ${{ secrets.API_KEY }}
      AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
      MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
      APP_ID: ${{ secrets.APP_ID }}
      MEASUREMENT_ID: ${{ secrets.MEASUREMENT_ID }}

      GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}

      SENTRY_DSN: ''

      URL: ${{ secrets.URL }}

      CYPRESS_PROJECT_KEY: ${{ secrets.CYPRESS_PROJECT_KEY }}

    strategy:
      matrix:
        node-version: [12.x]

    steps:

    - uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm ci

    - run: npm run build

  parallel-runs-across-platforms:

    name: every OS

    strategy:
      matrix:
        # run 2 copies of the current job in parallel
        # and they will load balance all specs
        os: ['ubuntu-latest', 'macos-latest']
        machines: [1, 2]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      # because of "record" and "parallel" parameters
      # these containers will load balance all found tests among themselves
      - name: run tests
        uses: cypress-io/github-action@v1
        timeout-minutes: 10
        with:
          record: true
          parallel: true
          tag: node-${{ matrix.node }}
          group: Parallel 2x on ${{ matrix.os }}
          start: npm run start
          env:
            API_KEY: ${{ secrets.API_KEY }}
            AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            PROJECT_ID: ${{ secrets.PROJECT_ID }}
            STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
            MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
            APP_ID: ${{ secrets.APP_ID }}
            MEASUREMENT_ID: ${{ secrets.MEASUREMENT_ID }}

            GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}

            SENTRY_DSN: ''

            URL: ${{ secrets.URL }}

            CYPRESS_PROJECT_KEY: ${{ secrets.CYPRESS_PROJECT_KEY }}